### RO intercept
> aggregate(sister_ro_metrics$intercept_ro, by = list(sister_ro_metrics$state), mean )
  Group.1         x
1      AF 0.9378070
2 AFother 0.8649860
3   other 0.7011589
> aggregate(sister_ro_metrics$intercept_ro, by = list(sister_ro_metrics$state), sd )
  Group.1          x
1      AF 0.10353101
2 AFother 0.03082796
3   other 0.06737273

# permutation test
> 1 - ( sum(diff_12 > rand_diff_12)/1001 )
[1] 0.000999001
> 1 - ( sum(diff_13 > rand_diff_13)/1001 )
[1] 0.000999001
> 1 - ( sum(diff_23 > rand_diff_23)/1001 )
[1] 0.000999001

### NO intercept
> aggregate(sister_no_metrics$intercept_no, by = list(sister_no_metrics$state), mean )
  Group.1         x
1      AF 0.1431599
2 AFother 0.2667755
3   other 0.1860237
> aggregate(sister_no_metrics$intercept_no, by = list(sister_no_metrics$state), sd )
  Group.1          x
1      AF 0.03327585
2 AFother 0.03106870
3   other 0.01956407

bonferroni = 0.05 / 3 = 0.01

# permutation test
> 1 - ( sum(diff_12 < rand_diff_12)/1001 )
[1] 0.000999001
> 1 - ( sum(diff_13 < rand_diff_13)/1001 )
[1] 0.005994006
> 1 - ( sum(diff_23 > rand_diff_23)/1001 )
[1] 0.000999001

### geosse
> table(best_fit_models$model_name)
  d  sd sxd 
 60  29  11

### geosse_time
> table(best_geosse_time$model_name)
  d  sd sxd 
 17  82   1 
 
# geosse_time: most common = sd_s_lin
> apply(common_params, MARGIN = 2, FUN=mean)
         sA.c          sA.m          sB.c          sB.m         sAB.c         sAB.m          xB.c          xB.m            dA            dB 
 1.070632e-01  6.327266e-02  1.256793e-01  2.283952e-01  4.436149e-05  9.744945e-04  3.593866e-02 -4.813563e-03  9.416223e-02  1.749241e-01 
> apply(common_params, MARGIN = 2, FUN=sd)
        sA.c         sA.m         sB.c         sB.m        sAB.c        sAB.m         xB.c         xB.m           dA           dB 
0.0310780693 0.0203203573 0.0591392105 0.0857290940 0.0001152464 0.0051998352 0.0713185727 0.0094373704 0.0157619268 0.0366965068 

 
### quasse
> table(best_fit_models$model_name)
 lm 
100  

# quasse: most common = lm
> apply(common_params, MARGIN = 2, FUN=mean)
          l.c           l.m           m.c           m.m     diffusion 
 4.641613e-01 -1.150314e-02 -1.903645e+05 -5.878463e+04  1.192078e+01 
> apply(common_params, MARGIN = 2, FUN=sd)
         l.c          l.m          m.c          m.m    diffusion 
8.882856e-02 1.804346e-02 3.688573e+05 1.087927e+05 7.434376e+00